name: Continous Integration

on:
  pull_request:
    branches: '**'

jobs:
  linux-tests:
    strategy:
      fail-fast: true
      matrix:
        config:
          - python-version: 3.8
            tox: py38
          - python-version: 3.9
            tox: py39
        poetry-version: [ 1.1.11 ]
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    services:
      queue:
        image: rabbitmq:3
        ports:
          - 9672:5672
      pytest-database:
        image: postgres:12
        env:
          - PGDATA=/var/lib/postgresql/data/pgdata
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=dontchangeme
          - POSTGRES_DB=debug_db
          - POSTGRES_PORT=5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 9432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up testing Python ${{ matrix.config.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.config.python-version }}
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies and prepare environment
        env:
          DEBUGGING_CONFIG: "$PWD/backend/app/debug.env"
          CELERY_BROKER_URL: "amqp://guest@0.0.0.0:9672//"
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "dontchangeme"
          POSTGRES_DB: "debug_db"
          POSTGRES_PORT: "9432"
        run: |
          python -m pip install --upgrade pip tox
      - name: Run tox
        env:
          DEBUGGING_CONFIG: "$PWD/backend/app/debug.env"
          CELERY_BROKER_URL: "amqp://guest@0.0.0.0:9672//"
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "dontchangeme"
          POSTGRES_DB: "debug_db"
          POSTGRES_PORT: "9432"
          TOX_TESTENV_PASSENV: DEBUGGING_CONFIG, CELERY_BROKER_URL, POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB, POSTGRES_PORT
        run: |
          cd "$PWD/backend/app/"
          tox -e lint -e py${{ matrix.config.tox }}
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v1
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          flags: unittests
#          env_vars: OS,PYTHON
#          name: codecov-umbrella
#          fail_ci_if_error: true
#          verbose: true
