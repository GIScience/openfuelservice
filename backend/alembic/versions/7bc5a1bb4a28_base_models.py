"""Base Models

Revision ID: 7bc5a1bb4a28
Revises:
Create Date: 2021-12-29 15:00:25.258161

"""
import sqlalchemy as sa
from geoalchemy2 import Geometry

from alembic import op

# revision identifiers, used by Alembic.
revision = "7bc5a1bb4a28"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "carfueldatacar",
        sa.Column("id", sa.CHAR(length=32), nullable=False),
        sa.Column("manufacturer", sa.String(), nullable=False),
        sa.Column("model", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("transmission", sa.String(), nullable=True),
        sa.Column("engine_capacity", sa.Integer(), nullable=True),
        sa.Column("fuel_type", sa.String(), nullable=False),
        sa.Column("electric_energy_consumption_miles_kwh", sa.Float(), nullable=True),
        sa.Column("manual_or_automatic", sa.String(), nullable=True),
        sa.Column("powertrain", sa.String(), nullable=True),
        sa.Column("engine_power_ps", sa.Float(), nullable=True),
        sa.Column("engine_power_kw", sa.Float(), nullable=True),
        sa.Column("wh_km", sa.Float(), nullable=True),
        sa.Column("maximum_range_km", sa.Float(), nullable=True),
        sa.Column("maximum_range_miles", sa.Float(), nullable=True),
        sa.Column("euro_standard", sa.String(), nullable=True),
        sa.Column("diesel_ved_supplement", sa.Boolean(), nullable=True),
        sa.Column("testing_scheme", sa.String(), nullable=True),
        sa.Column("wltp_imperial_low", sa.Float(), nullable=True),
        sa.Column("wltp_imperial_medium", sa.Float(), nullable=True),
        sa.Column("wltp_imperial_high", sa.Float(), nullable=True),
        sa.Column("wltp_imperial_extra_high", sa.Float(), nullable=True),
        sa.Column("wltp_imperial_combined", sa.Float(), nullable=True),
        sa.Column("wltp_imperial_combined_weighted", sa.Float(), nullable=True),
        sa.Column("wltp_metric_low", sa.Float(), nullable=True),
        sa.Column("wltp_metric_medium", sa.Float(), nullable=True),
        sa.Column("wltp_metric_high", sa.Float(), nullable=True),
        sa.Column("wltp_metric_extra_high", sa.Float(), nullable=True),
        sa.Column("wltp_metric_combined", sa.Float(), nullable=True),
        sa.Column("wltp_metric_combined_weighted", sa.Float(), nullable=True),
        sa.Column("wltp_co2", sa.Integer(), nullable=True),
        sa.Column("wltp_co2_weighted", sa.Integer(), nullable=True),
        sa.Column("equivalent_all_electric_range_miles", sa.Integer(), nullable=True),
        sa.Column("equivalent_all_electric_range_km", sa.Integer(), nullable=True),
        sa.Column("electric_range_city_miles", sa.Integer(), nullable=True),
        sa.Column("electric_range_city_km", sa.Integer(), nullable=True),
        sa.Column("emissions_co_mg_km", sa.Float(), nullable=True),
        sa.Column("thc_emissions_mg_km", sa.Float(), nullable=True),
        sa.Column("emissions_nox_mg_km", sa.Float(), nullable=True),
        sa.Column("thc_nox_emissions_mg_km", sa.Float(), nullable=True),
        sa.Column("particulates_no_mg_km", sa.Float(), nullable=True),
        sa.Column("rde_nox_urban", sa.Integer(), nullable=True),
        sa.Column("rde_nox_combined", sa.Integer(), nullable=True),
        sa.Column("noise_level_dba", sa.Float(), nullable=True),
        sa.Column("wiki_hashes", sa.ARRAY(sa.CHAR(length=32)), nullable=True),
        sa.Column("date_of_change", sa.Date(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_carfueldatacar_manufacturer"),
        "carfueldatacar",
        ["manufacturer"],
        unique=False,
    )
    op.create_table(
        "countrydata",
        sa.Column("country_name", sa.String(), nullable=False),
        sa.Column("country_alpha_2", sa.String(), nullable=True),
        sa.Column("country_alpha_3", sa.VARCHAR(), nullable=True),
        sa.Column("country_numeric", sa.Integer(), nullable=True),
        sa.Column("country_currency_code", sa.String(), nullable=True),
        sa.Column("country_currency_name", sa.String(), nullable=True),
        sa.Column(
            "geom",
            Geometry(
                geometry_type="MULTIPOLYGON",
                srid=4326,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("country_name"),
    )
    op.create_index(
        op.f("ix_countrydata_country_alpha_2"),
        "countrydata",
        ["country_alpha_2"],
        unique=True,
    )
    op.create_index(
        op.f("ix_countrydata_country_alpha_3"),
        "countrydata",
        ["country_alpha_3"],
        unique=True,
    )
    op.create_index(
        op.f("ix_countrydata_country_currency_code"),
        "countrydata",
        ["country_currency_code"],
        unique=False,
    )
    op.create_index(
        op.f("ix_countrydata_country_currency_name"),
        "countrydata",
        ["country_currency_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_countrydata_country_name"),
        "countrydata",
        ["country_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_countrydata_country_numeric"),
        "countrydata",
        ["country_numeric"],
        unique=False,
    )
    op.create_table(
        "envirocarphenomenon",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("unit", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_index(
        op.f("ix_envirocarphenomenon_name"),
        "envirocarphenomenon",
        ["name"],
        unique=False,
    )
    op.create_table(
        "envirocarsensor",
        sa.Column("sensor_id", sa.String(), nullable=False),
        sa.Column("sensor_type", sa.String(), nullable=False),
        sa.Column("car_model", sa.String(), nullable=False),
        sa.Column("car_manufacturer", sa.String(), nullable=False),
        sa.Column("fuel_type", sa.String(), nullable=False),
        sa.Column("construction_year", sa.Integer(), nullable=False),
        sa.Column("wiki_hashes", sa.ARRAY(sa.CHAR(length=32)), nullable=True),
        sa.PrimaryKeyConstraint("sensor_id"),
    )
    op.create_index(
        op.f("ix_envirocarsensor_sensor_id"),
        "envirocarsensor",
        ["sensor_id"],
        unique=True,
    )
    op.create_table(
        "eurostatgeneralpricemodel",
        sa.Column("hash_id", sa.CHAR(length=32), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("euro_price", sa.Integer(), nullable=True),
        sa.Column("euro_ht", sa.Numeric(), nullable=True),
        sa.Column("euro_ttc", sa.Numeric(), nullable=True),
        sa.Column("euro_unit", sa.String(), nullable=False),
        sa.Column("euro_quantity", sa.Integer(), nullable=False),
        sa.Column("diesel_ht", sa.Numeric(), nullable=True),
        sa.Column("diesel_ttc", sa.Numeric(), nullable=True),
        sa.Column("diesel_unit", sa.String(), nullable=False),
        sa.Column("diesel_quantity", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("hash_id", "date"),
        sa.UniqueConstraint("date"),
        sa.UniqueConstraint("hash_id"),
    )
    op.create_table(
        "matchedwikienvirocar",
        sa.Column("object_hash", sa.CHAR(length=32), nullable=False),
        sa.Column("envirocar_sensor_id", sa.String(), nullable=True),
        sa.Column("car_hash_id", sa.CHAR(length=32), nullable=False),
        sa.PrimaryKeyConstraint("object_hash"),
    )
    op.create_index(
        op.f("ix_matchedwikienvirocar_car_hash_id"),
        "matchedwikienvirocar",
        ["car_hash_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_matchedwikienvirocar_envirocar_sensor_id"),
        "matchedwikienvirocar",
        ["envirocar_sensor_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_matchedwikienvirocar_object_hash"),
        "matchedwikienvirocar",
        ["object_hash"],
        unique=False,
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_full_name"), "user", ["full_name"], unique=False)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "wikicarcategory",
        sa.Column("category_short_eu", sa.String(), nullable=False),
        sa.Column("category_name_de", sa.String(), nullable=False),
        sa.Column("category_name_en", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("category_short_eu"),
    )
    op.create_index(
        op.f("ix_wikicarcategory_category_name_de"),
        "wikicarcategory",
        ["category_name_de"],
        unique=True,
    )
    op.create_index(
        op.f("ix_wikicarcategory_category_name_en"),
        "wikicarcategory",
        ["category_name_en"],
        unique=True,
    )
    op.create_index(
        op.f("ix_wikicarcategory_category_short_eu"),
        "wikicarcategory",
        ["category_short_eu"],
        unique=False,
    )
    op.create_table(
        "carfueldataaveragecategorystatistics",
        sa.Column("id", sa.CHAR(length=32), nullable=False),
        sa.Column("vehicle_type", sa.String(), nullable=False),
        sa.Column("fuel_type", sa.String(), nullable=False),
        sa.Column("phenomenon_name", sa.String(), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("numb_cars", sa.Integer(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("category_short_eu", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_short_eu"], ["wikicarcategory.category_short_eu"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_carfueldataaveragecategorystatistics_fuel_type"),
        "carfueldataaveragecategorystatistics",
        ["fuel_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_carfueldataaveragecategorystatistics_id"),
        "carfueldataaveragecategorystatistics",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_carfueldataaveragecategorystatistics_phenomenon_name"),
        "carfueldataaveragecategorystatistics",
        ["phenomenon_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_carfueldataaveragecategorystatistics_vehicle_type"),
        "carfueldataaveragecategorystatistics",
        ["vehicle_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_carfueldataaveragecategorystatistics_year"),
        "carfueldataaveragecategorystatistics",
        ["year"],
        unique=False,
    )
    op.create_table(
        "envirocaraveragecategorystatistics",
        sa.Column("hash_id", sa.CHAR(length=32), nullable=False),
        sa.Column("vehicle_type", sa.String(), nullable=False),
        sa.Column("fuel_type", sa.String(), nullable=False),
        sa.Column("phenomenon_name", sa.String(), nullable=False),
        sa.Column("max", sa.Float(asdecimal=True), nullable=True),
        sa.Column("average", sa.Float(asdecimal=True), nullable=True),
        sa.Column("min", sa.Float(asdecimal=True), nullable=True),
        sa.Column("measurements", sa.Integer(), nullable=False),
        sa.Column("numb_sensors", sa.Integer(), nullable=False),
        sa.Column("category_short_eu", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_short_eu"], ["wikicarcategory.category_short_eu"],
        ),
        sa.ForeignKeyConstraint(["phenomenon_name"], ["envirocarphenomenon.name"],),
        sa.PrimaryKeyConstraint("hash_id"),
    )
    op.create_index(
        op.f("ix_envirocaraveragecategorystatistics_fuel_type"),
        "envirocaraveragecategorystatistics",
        ["fuel_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocaraveragecategorystatistics_hash_id"),
        "envirocaraveragecategorystatistics",
        ["hash_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocaraveragecategorystatistics_phenomenon_name"),
        "envirocaraveragecategorystatistics",
        ["phenomenon_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocaraveragecategorystatistics_vehicle_type"),
        "envirocaraveragecategorystatistics",
        ["vehicle_type"],
        unique=False,
    )
    op.create_table(
        "envirocaraveragemanufacturerstatistic",
        sa.Column("hash_id", sa.CHAR(length=32), nullable=False),
        sa.Column("manufacturer", sa.String(), nullable=False),
        sa.Column("vehicle_type", sa.String(), nullable=False),
        sa.Column("fuel_type", sa.String(), nullable=False),
        sa.Column("phenomenon_name", sa.String(), nullable=False),
        sa.Column("max", sa.Float(asdecimal=True), nullable=True),
        sa.Column("average", sa.Float(asdecimal=True), nullable=True),
        sa.Column("min", sa.Float(asdecimal=True), nullable=True),
        sa.Column("measurements", sa.Integer(), nullable=False),
        sa.Column("numb_sensors", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["phenomenon_name"], ["envirocarphenomenon.name"],),
        sa.PrimaryKeyConstraint("hash_id"),
    )
    op.create_index(
        op.f("ix_envirocaraveragemanufacturerstatistic_fuel_type"),
        "envirocaraveragemanufacturerstatistic",
        ["fuel_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocaraveragemanufacturerstatistic_hash_id"),
        "envirocaraveragemanufacturerstatistic",
        ["hash_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocaraveragemanufacturerstatistic_manufacturer"),
        "envirocaraveragemanufacturerstatistic",
        ["manufacturer"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocaraveragemanufacturerstatistic_phenomenon_name"),
        "envirocaraveragemanufacturerstatistic",
        ["phenomenon_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocaraveragemanufacturerstatistic_vehicle_type"),
        "envirocaraveragemanufacturerstatistic",
        ["vehicle_type"],
        unique=False,
    )
    op.create_table(
        "envirocaraveragevehicletypestatistic",
        sa.Column("hash_id", sa.CHAR(length=32), nullable=False),
        sa.Column("vehicle_type", sa.String(), nullable=False),
        sa.Column("fuel_type", sa.String(), nullable=False),
        sa.Column("phenomenon_name", sa.String(), nullable=False),
        sa.Column("max", sa.Float(asdecimal=True), nullable=True),
        sa.Column("average", sa.Float(asdecimal=True), nullable=True),
        sa.Column("min", sa.Float(asdecimal=True), nullable=True),
        sa.Column("measurements", sa.Integer(), nullable=False),
        sa.Column("numb_sensors", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["phenomenon_name"], ["envirocarphenomenon.name"],),
        sa.PrimaryKeyConstraint("hash_id"),
    )
    op.create_index(
        op.f("ix_envirocaraveragevehicletypestatistic_fuel_type"),
        "envirocaraveragevehicletypestatistic",
        ["fuel_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocaraveragevehicletypestatistic_hash_id"),
        "envirocaraveragevehicletypestatistic",
        ["hash_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocaraveragevehicletypestatistic_phenomenon_name"),
        "envirocaraveragevehicletypestatistic",
        ["phenomenon_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocaraveragevehicletypestatistic_vehicle_type"),
        "envirocaraveragevehicletypestatistic",
        ["vehicle_type"],
        unique=False,
    )
    op.create_table(
        "envirocarsensorstatistic",
        sa.Column("hash_id", sa.CHAR(length=32), nullable=False),
        sa.Column("sensor_id", sa.String(), nullable=False),
        sa.Column("phenomenon_name", sa.String(), nullable=False),
        sa.Column("max", sa.Float(asdecimal=True), nullable=True),
        sa.Column("avg", sa.Float(asdecimal=True), nullable=True),
        sa.Column("min", sa.Float(asdecimal=True), nullable=True),
        sa.Column("numb_measurements", sa.Integer(), nullable=True),
        sa.Column("numb_tracks", sa.Integer(), nullable=True),
        sa.Column("numb_users", sa.Integer(), nullable=True),
        sa.Column("numb_sensors", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["phenomenon_name"], ["envirocarphenomenon.name"],),
        sa.ForeignKeyConstraint(["sensor_id"], ["envirocarsensor.sensor_id"],),
        sa.PrimaryKeyConstraint("hash_id"),
    )
    op.create_index(
        op.f("ix_envirocarsensorstatistic_hash_id"),
        "envirocarsensorstatistic",
        ["hash_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocarsensorstatistic_phenomenon_name"),
        "envirocarsensorstatistic",
        ["phenomenon_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocarsensorstatistic_sensor_id"),
        "envirocarsensorstatistic",
        ["sensor_id"],
        unique=False,
    )
    op.create_table(
        "envirocartrack",
        sa.Column("track_id", sa.String(), nullable=False),
        sa.Column("sensor_id", sa.String(), nullable=False),
        sa.Column("track_length", sa.Float(asdecimal=True), nullable=True),
        sa.Column(
            "geom",
            Geometry(
                geometry_type="LINESTRING",
                srid=4326,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["sensor_id"], ["envirocarsensor.sensor_id"],),
        sa.PrimaryKeyConstraint("track_id"),
    )
    op.create_index(
        op.f("ix_envirocartrack_sensor_id"),
        "envirocartrack",
        ["sensor_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocartrack_track_id"), "envirocartrack", ["track_id"], unique=True
    )
    op.create_table(
        "eurostatcountryprice",
        sa.Column("hash_id", sa.CHAR(length=32), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("country_alpha_2", sa.String(), nullable=False),
        sa.Column("taux", sa.Float(), nullable=True),
        sa.Column("euro_price", sa.Integer(), nullable=True),
        sa.Column("euro_ht", sa.Numeric(), nullable=True),
        sa.Column("euro_ttc", sa.Numeric(), nullable=True),
        sa.Column("euro_unit", sa.String(), nullable=False),
        sa.Column("euro_quantity", sa.Integer(), nullable=False),
        sa.Column("diesel_ht", sa.Numeric(), nullable=True),
        sa.Column("diesel_ttc", sa.Numeric(), nullable=True),
        sa.Column("diesel_unit", sa.String(), nullable=False),
        sa.Column("diesel_quantity", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["country_alpha_2"], ["countrydata.country_alpha_2"],),
        sa.PrimaryKeyConstraint("hash_id"),
    )
    op.create_index(
        op.f("ix_eurostatcountryprice_country_alpha_2"),
        "eurostatcountryprice",
        ["country_alpha_2"],
        unique=False,
    )
    op.create_index(
        op.f("ix_eurostatcountryprice_date"),
        "eurostatcountryprice",
        ["date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_eurostatcountryprice_hash_id"),
        "eurostatcountryprice",
        ["hash_id"],
        unique=False,
    )
    op.create_table(
        "item",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["owner_id"], ["user.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_item_description"), "item", ["description"], unique=False)
    op.create_index(op.f("ix_item_id"), "item", ["id"], unique=False)
    op.create_index(op.f("ix_item_title"), "item", ["title"], unique=False)
    op.create_table(
        "wikicar",
        sa.Column("hash_id", sa.CHAR(length=32), nullable=False),
        sa.Column("wiki_name", sa.String(), nullable=False),
        sa.Column("category_short_eu", sa.String(), nullable=True),
        sa.Column("brand_name", sa.String(), nullable=False),
        sa.Column("car_name", sa.String(), nullable=False),
        sa.Column("page_id", sa.Integer(), nullable=True),
        sa.Column("page_language", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_short_eu"], ["wikicarcategory.category_short_eu"],
        ),
        sa.PrimaryKeyConstraint("hash_id"),
    )
    op.create_index(
        op.f("ix_wikicar_brand_name"), "wikicar", ["brand_name"], unique=False
    )
    op.create_index(op.f("ix_wikicar_car_name"), "wikicar", ["car_name"], unique=False)
    op.create_index(
        op.f("ix_wikicar_category_short_eu"),
        "wikicar",
        ["category_short_eu"],
        unique=False,
    )
    op.create_index(op.f("ix_wikicar_hash_id"), "wikicar", ["hash_id"], unique=False)
    op.create_index(
        op.f("ix_wikicar_wiki_name"), "wikicar", ["wiki_name"], unique=False
    )
    op.create_table(
        "wikicarpagetext",
        sa.Column("hash_id", sa.CHAR(length=32), nullable=False),
        sa.Column("wiki_name", sa.String(), nullable=False),
        sa.Column("brand_name", sa.String(), nullable=False),
        sa.Column("car_name", sa.String(), nullable=False),
        sa.Column("page_language", sa.String(), nullable=False),
        sa.Column("page_text", sa.String(), nullable=True),
        sa.Column("category_short_eu", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_short_eu"], ["wikicarcategory.category_short_eu"],
        ),
        sa.PrimaryKeyConstraint("hash_id"),
    )
    op.create_index(
        op.f("ix_wikicarpagetext_brand_name"),
        "wikicarpagetext",
        ["brand_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_wikicarpagetext_car_name"),
        "wikicarpagetext",
        ["car_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_wikicarpagetext_category_short_eu"),
        "wikicarpagetext",
        ["category_short_eu"],
        unique=False,
    )
    op.create_index(
        op.f("ix_wikicarpagetext_hash_id"), "wikicarpagetext", ["hash_id"], unique=False
    )
    op.create_index(
        op.f("ix_wikicarpagetext_page_language"),
        "wikicarpagetext",
        ["page_language"],
        unique=False,
    )
    op.create_index(
        op.f("ix_wikicarpagetext_wiki_name"),
        "wikicarpagetext",
        ["wiki_name"],
        unique=False,
    )
    op.create_table(
        "envirocartrackfeature",
        sa.Column("track_measurement_id", sa.String(), nullable=False),
        sa.Column("sensor_id", sa.String(), nullable=False),
        sa.Column("track_id", sa.String(), nullable=False),
        sa.Column(
            "geom",
            Geometry(
                geometry_type="POINT",
                srid=4326,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["sensor_id"], ["envirocarsensor.sensor_id"],),
        sa.ForeignKeyConstraint(["track_id"], ["envirocartrack.track_id"],),
        sa.PrimaryKeyConstraint("track_measurement_id"),
    )
    op.create_index(
        op.f("ix_envirocartrackfeature_sensor_id"),
        "envirocartrackfeature",
        ["sensor_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocartrackfeature_track_id"),
        "envirocartrackfeature",
        ["track_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocartrackfeature_track_measurement_id"),
        "envirocartrackfeature",
        ["track_measurement_id"],
        unique=True,
    )
    op.create_table(
        "envirocartrackstatistic",
        sa.Column("hash_id", sa.CHAR(length=32), nullable=False),
        sa.Column("track_id", sa.String(), nullable=False),
        sa.Column("phenomenon_name", sa.String(), nullable=False),
        sa.Column("max", sa.Float(asdecimal=True), nullable=True),
        sa.Column("avg", sa.Float(asdecimal=True), nullable=True),
        sa.Column("min", sa.Float(asdecimal=True), nullable=True),
        sa.Column("numb_measurements", sa.Integer(), nullable=True),
        sa.Column("numb_tracks", sa.Float(asdecimal=True), nullable=True),
        sa.Column("numb_users", sa.Float(asdecimal=True), nullable=True),
        sa.Column("numb_sensors", sa.Float(asdecimal=True), nullable=True),
        sa.ForeignKeyConstraint(["phenomenon_name"], ["envirocarphenomenon.name"],),
        sa.ForeignKeyConstraint(["track_id"], ["envirocartrack.track_id"],),
        sa.PrimaryKeyConstraint("hash_id"),
    )
    op.create_index(
        op.f("ix_envirocartrackstatistic_hash_id"),
        "envirocartrackstatistic",
        ["hash_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocartrackstatistic_phenomenon_name"),
        "envirocartrackstatistic",
        ["phenomenon_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocartrackstatistic_track_id"),
        "envirocartrackstatistic",
        ["track_id"],
        unique=False,
    )
    op.create_table(
        "envirocartrackmeasurement",
        sa.Column("hash_id", sa.CHAR(length=32), nullable=False),
        sa.Column("track_measurement_id", sa.String(), nullable=False),
        sa.Column("track_id", sa.String(), nullable=False),
        sa.Column("sensor_id", sa.String(), nullable=False),
        sa.Column("phenomenon_name", sa.String(), nullable=False),
        sa.Column("phenomenon_value", sa.Float(asdecimal=True), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["phenomenon_name"], ["envirocarphenomenon.name"],),
        sa.ForeignKeyConstraint(["sensor_id"], ["envirocarsensor.sensor_id"],),
        sa.ForeignKeyConstraint(["track_id"], ["envirocartrack.track_id"],),
        sa.ForeignKeyConstraint(
            ["track_measurement_id"], ["envirocartrackfeature.track_measurement_id"],
        ),
        sa.PrimaryKeyConstraint("hash_id"),
    )
    op.create_index(
        op.f("ix_envirocartrackmeasurement_date"),
        "envirocartrackmeasurement",
        ["date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocartrackmeasurement_hash_id"),
        "envirocartrackmeasurement",
        ["hash_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocartrackmeasurement_phenomenon_name"),
        "envirocartrackmeasurement",
        ["phenomenon_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocartrackmeasurement_sensor_id"),
        "envirocartrackmeasurement",
        ["sensor_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocartrackmeasurement_track_id"),
        "envirocartrackmeasurement",
        ["track_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_envirocartrackmeasurement_track_measurement_id"),
        "envirocartrackmeasurement",
        ["track_measurement_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_envirocartrackmeasurement_track_measurement_id"),
        table_name="envirocartrackmeasurement",
    )
    op.drop_index(
        op.f("ix_envirocartrackmeasurement_track_id"),
        table_name="envirocartrackmeasurement",
    )
    op.drop_index(
        op.f("ix_envirocartrackmeasurement_sensor_id"),
        table_name="envirocartrackmeasurement",
    )
    op.drop_index(
        op.f("ix_envirocartrackmeasurement_phenomenon_name"),
        table_name="envirocartrackmeasurement",
    )
    op.drop_index(
        op.f("ix_envirocartrackmeasurement_hash_id"),
        table_name="envirocartrackmeasurement",
    )
    op.drop_index(
        op.f("ix_envirocartrackmeasurement_date"),
        table_name="envirocartrackmeasurement",
    )
    op.drop_table("envirocartrackmeasurement")
    op.drop_index(
        op.f("ix_envirocartrackstatistic_track_id"),
        table_name="envirocartrackstatistic",
    )
    op.drop_index(
        op.f("ix_envirocartrackstatistic_phenomenon_name"),
        table_name="envirocartrackstatistic",
    )
    op.drop_index(
        op.f("ix_envirocartrackstatistic_hash_id"), table_name="envirocartrackstatistic"
    )
    op.drop_table("envirocartrackstatistic")
    op.drop_index(
        op.f("ix_envirocartrackfeature_track_measurement_id"),
        table_name="envirocartrackfeature",
    )
    op.drop_index(
        op.f("ix_envirocartrackfeature_track_id"), table_name="envirocartrackfeature"
    )
    op.drop_index(
        op.f("ix_envirocartrackfeature_sensor_id"), table_name="envirocartrackfeature"
    )
    op.drop_table("envirocartrackfeature")
    op.drop_index(op.f("ix_wikicarpagetext_wiki_name"), table_name="wikicarpagetext")
    op.drop_index(
        op.f("ix_wikicarpagetext_page_language"), table_name="wikicarpagetext"
    )
    op.drop_index(op.f("ix_wikicarpagetext_hash_id"), table_name="wikicarpagetext")
    op.drop_index(
        op.f("ix_wikicarpagetext_category_short_eu"), table_name="wikicarpagetext"
    )
    op.drop_index(op.f("ix_wikicarpagetext_car_name"), table_name="wikicarpagetext")
    op.drop_index(op.f("ix_wikicarpagetext_brand_name"), table_name="wikicarpagetext")
    op.drop_table("wikicarpagetext")
    op.drop_index(op.f("ix_wikicar_wiki_name"), table_name="wikicar")
    op.drop_index(op.f("ix_wikicar_hash_id"), table_name="wikicar")
    op.drop_index(op.f("ix_wikicar_category_short_eu"), table_name="wikicar")
    op.drop_index(op.f("ix_wikicar_car_name"), table_name="wikicar")
    op.drop_index(op.f("ix_wikicar_brand_name"), table_name="wikicar")
    op.drop_table("wikicar")
    op.drop_index(op.f("ix_item_title"), table_name="item")
    op.drop_index(op.f("ix_item_id"), table_name="item")
    op.drop_index(op.f("ix_item_description"), table_name="item")
    op.drop_table("item")
    op.drop_index(
        op.f("ix_eurostatcountryprice_hash_id"), table_name="eurostatcountryprice"
    )
    op.drop_index(
        op.f("ix_eurostatcountryprice_date"), table_name="eurostatcountryprice"
    )
    op.drop_index(
        op.f("ix_eurostatcountryprice_country_alpha_2"),
        table_name="eurostatcountryprice",
    )
    op.drop_table("eurostatcountryprice")
    op.drop_index(op.f("ix_envirocartrack_track_id"), table_name="envirocartrack")
    op.drop_index(op.f("ix_envirocartrack_sensor_id"), table_name="envirocartrack")
    op.drop_table("envirocartrack")
    op.drop_index(
        op.f("ix_envirocarsensorstatistic_sensor_id"),
        table_name="envirocarsensorstatistic",
    )
    op.drop_index(
        op.f("ix_envirocarsensorstatistic_phenomenon_name"),
        table_name="envirocarsensorstatistic",
    )
    op.drop_index(
        op.f("ix_envirocarsensorstatistic_hash_id"),
        table_name="envirocarsensorstatistic",
    )
    op.drop_table("envirocarsensorstatistic")
    op.drop_index(
        op.f("ix_envirocaraveragevehicletypestatistic_vehicle_type"),
        table_name="envirocaraveragevehicletypestatistic",
    )
    op.drop_index(
        op.f("ix_envirocaraveragevehicletypestatistic_phenomenon_name"),
        table_name="envirocaraveragevehicletypestatistic",
    )
    op.drop_index(
        op.f("ix_envirocaraveragevehicletypestatistic_hash_id"),
        table_name="envirocaraveragevehicletypestatistic",
    )
    op.drop_index(
        op.f("ix_envirocaraveragevehicletypestatistic_fuel_type"),
        table_name="envirocaraveragevehicletypestatistic",
    )
    op.drop_table("envirocaraveragevehicletypestatistic")
    op.drop_index(
        op.f("ix_envirocaraveragemanufacturerstatistic_vehicle_type"),
        table_name="envirocaraveragemanufacturerstatistic",
    )
    op.drop_index(
        op.f("ix_envirocaraveragemanufacturerstatistic_phenomenon_name"),
        table_name="envirocaraveragemanufacturerstatistic",
    )
    op.drop_index(
        op.f("ix_envirocaraveragemanufacturerstatistic_manufacturer"),
        table_name="envirocaraveragemanufacturerstatistic",
    )
    op.drop_index(
        op.f("ix_envirocaraveragemanufacturerstatistic_hash_id"),
        table_name="envirocaraveragemanufacturerstatistic",
    )
    op.drop_index(
        op.f("ix_envirocaraveragemanufacturerstatistic_fuel_type"),
        table_name="envirocaraveragemanufacturerstatistic",
    )
    op.drop_table("envirocaraveragemanufacturerstatistic")
    op.drop_index(
        op.f("ix_envirocaraveragecategorystatistics_vehicle_type"),
        table_name="envirocaraveragecategorystatistics",
    )
    op.drop_index(
        op.f("ix_envirocaraveragecategorystatistics_phenomenon_name"),
        table_name="envirocaraveragecategorystatistics",
    )
    op.drop_index(
        op.f("ix_envirocaraveragecategorystatistics_hash_id"),
        table_name="envirocaraveragecategorystatistics",
    )
    op.drop_index(
        op.f("ix_envirocaraveragecategorystatistics_fuel_type"),
        table_name="envirocaraveragecategorystatistics",
    )
    op.drop_table("envirocaraveragecategorystatistics")
    op.drop_index(
        op.f("ix_carfueldataaveragecategorystatistics_year"),
        table_name="carfueldataaveragecategorystatistics",
    )
    op.drop_index(
        op.f("ix_carfueldataaveragecategorystatistics_vehicle_type"),
        table_name="carfueldataaveragecategorystatistics",
    )
    op.drop_index(
        op.f("ix_carfueldataaveragecategorystatistics_phenomenon_name"),
        table_name="carfueldataaveragecategorystatistics",
    )
    op.drop_index(
        op.f("ix_carfueldataaveragecategorystatistics_id"),
        table_name="carfueldataaveragecategorystatistics",
    )
    op.drop_index(
        op.f("ix_carfueldataaveragecategorystatistics_fuel_type"),
        table_name="carfueldataaveragecategorystatistics",
    )
    op.drop_table("carfueldataaveragecategorystatistics")
    op.drop_index(
        op.f("ix_wikicarcategory_category_short_eu"), table_name="wikicarcategory"
    )
    op.drop_index(
        op.f("ix_wikicarcategory_category_name_en"), table_name="wikicarcategory"
    )
    op.drop_index(
        op.f("ix_wikicarcategory_category_name_de"), table_name="wikicarcategory"
    )
    op.drop_table("wikicarcategory")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_full_name"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(
        op.f("ix_matchedwikienvirocar_object_hash"), table_name="matchedwikienvirocar"
    )
    op.drop_index(
        op.f("ix_matchedwikienvirocar_envirocar_sensor_id"),
        table_name="matchedwikienvirocar",
    )
    op.drop_index(
        op.f("ix_matchedwikienvirocar_car_hash_id"), table_name="matchedwikienvirocar"
    )
    op.drop_table("matchedwikienvirocar")
    op.drop_table("eurostatgeneralpricemodel")
    op.drop_index(op.f("ix_envirocarsensor_sensor_id"), table_name="envirocarsensor")
    op.drop_table("envirocarsensor")
    op.drop_index(op.f("ix_envirocarphenomenon_name"), table_name="envirocarphenomenon")
    op.drop_table("envirocarphenomenon")
    op.drop_index(op.f("ix_countrydata_country_numeric"), table_name="countrydata")
    op.drop_index(op.f("ix_countrydata_country_name"), table_name="countrydata")
    op.drop_index(
        op.f("ix_countrydata_country_currency_name"), table_name="countrydata"
    )
    op.drop_index(
        op.f("ix_countrydata_country_currency_code"), table_name="countrydata"
    )
    op.drop_index(op.f("ix_countrydata_country_alpha_3"), table_name="countrydata")
    op.drop_index(op.f("ix_countrydata_country_alpha_2"), table_name="countrydata")
    op.drop_table("countrydata")
    op.drop_index(op.f("ix_carfueldatacar_manufacturer"), table_name="carfueldatacar")
    op.drop_table("carfueldatacar")
    # ### end Alembic commands ###
